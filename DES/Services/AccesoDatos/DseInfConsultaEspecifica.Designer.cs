//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.18408
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace SIGAPred.FuentesExternas.Isai.Services.AccesoDatos {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DseInfConsultaEspecifica")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DseInfConsultaEspecifica : global::System.Data.DataSet {
        
        private FEXNOT_INFOCONSESPECIFICADataTable tableFEXNOT_INFOCONSESPECIFICA;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.ExcludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DseInfConsultaEspecifica() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected DseInfConsultaEspecifica(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["FEXNOT_INFOCONSESPECIFICA"] != null)) {
                    base.Tables.Add(new FEXNOT_INFOCONSESPECIFICADataTable(ds.Tables["FEXNOT_INFOCONSESPECIFICA"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FEXNOT_INFOCONSESPECIFICADataTable FEXNOT_INFOCONSESPECIFICA {
            get {
                return this.tableFEXNOT_INFOCONSESPECIFICA;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            DseInfConsultaEspecifica cln = ((DseInfConsultaEspecifica)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["FEXNOT_INFOCONSESPECIFICA"] != null)) {
                    base.Tables.Add(new FEXNOT_INFOCONSESPECIFICADataTable(ds.Tables["FEXNOT_INFOCONSESPECIFICA"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableFEXNOT_INFOCONSESPECIFICA = ((FEXNOT_INFOCONSESPECIFICADataTable)(base.Tables["FEXNOT_INFOCONSESPECIFICA"]));
            if ((initTable == true)) {
                if ((this.tableFEXNOT_INFOCONSESPECIFICA != null)) {
                    this.tableFEXNOT_INFOCONSESPECIFICA.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "DseInfConsultaEspecifica";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DseInfConsultaEspecifica.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.ExcludeSchema;
            this.tableFEXNOT_INFOCONSESPECIFICA = new FEXNOT_INFOCONSESPECIFICADataTable();
            base.Tables.Add(this.tableFEXNOT_INFOCONSESPECIFICA);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeFEXNOT_INFOCONSESPECIFICA() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DseInfConsultaEspecifica ds = new DseInfConsultaEspecifica();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void FEXNOT_INFOCONSESPECIFICARowChangeEventHandler(object sender, FEXNOT_INFOCONSESPECIFICARowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FEXNOT_INFOCONSESPECIFICADataTable : global::System.Data.TypedTableBase<FEXNOT_INFOCONSESPECIFICARow> {
            
            private global::System.Data.DataColumn columnIDDECLARACION;
            
            private global::System.Data.DataColumn columnNUMPRESENTACION;
            
            private global::System.Data.DataColumn columnVALORCATASTRAL;
            
            private global::System.Data.DataColumn columnVALORADQUISICION;
            
            private global::System.Data.DataColumn columnVALORAVALUO;
            
            private global::System.Data.DataColumn columnFECHAESCRITURA;
            
            private global::System.Data.DataColumn columnFECHAPAGO;
            
            private global::System.Data.DataColumn columnDIAS_ESCRITURA_PAGO;
            
            private global::System.Data.DataColumn columnFECHAVALORREFERIDO;
            
            private global::System.Data.DataColumn columnDIAS_ESCRITURA_AVALUO;
            
            private global::System.Data.DataColumn columnFECHAPRESENTACION;
            
            private global::System.Data.DataColumn columnDIAS_PRESENTACION_PAGO;
            
            private global::System.Data.DataColumn columnIMPUESTOPAGADO;
            
            private global::System.Data.DataColumn columnIMPORTEIMPUESTO;
            
            private global::System.Data.DataColumn columnDIFERENCIA_PAGADO_CALCULADO;
            
            private global::System.Data.DataColumn columnNOMBRE_NOTARIO;
            
            private global::System.Data.DataColumn columnNUMERO_NOTARIO;
            
            private global::System.Data.DataColumn columnNOMBRE_PERITO;
            
            private global::System.Data.DataColumn columnREGISTRO_PERITO;
            
            private global::System.Data.DataColumn columnNOMBRE_SOCIEDAD;
            
            private global::System.Data.DataColumn columnREGISTRO_SOCIEDAD;
            
            private global::System.Data.DataColumn columnNUMEROAVALUO;
            
            private global::System.Data.DataColumn columnREGION;
            
            private global::System.Data.DataColumn columnMANZANA;
            
            private global::System.Data.DataColumn columnLOTE;
            
            private global::System.Data.DataColumn columnUNIDADPRIVATIVA;
            
            private global::System.Data.DataColumn columnVIANUMOFICIAL;
            
            private global::System.Data.DataColumn columnDIRCONDOMINIO;
            
            private global::System.Data.DataColumn columnCOLONIA;
            
            private global::System.Data.DataColumn columnCODIGOPOSTAL;
            
            private global::System.Data.DataColumn columnFECHA;
            
            private global::System.Data.DataColumn columnPORCACTOTOTAL;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FEXNOT_INFOCONSESPECIFICADataTable() {
                this.TableName = "FEXNOT_INFOCONSESPECIFICA";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal FEXNOT_INFOCONSESPECIFICADataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected FEXNOT_INFOCONSESPECIFICADataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDDECLARACIONColumn {
                get {
                    return this.columnIDDECLARACION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NUMPRESENTACIONColumn {
                get {
                    return this.columnNUMPRESENTACION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VALORCATASTRALColumn {
                get {
                    return this.columnVALORCATASTRAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VALORADQUISICIONColumn {
                get {
                    return this.columnVALORADQUISICION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VALORAVALUOColumn {
                get {
                    return this.columnVALORAVALUO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FECHAESCRITURAColumn {
                get {
                    return this.columnFECHAESCRITURA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FECHAPAGOColumn {
                get {
                    return this.columnFECHAPAGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DIAS_ESCRITURA_PAGOColumn {
                get {
                    return this.columnDIAS_ESCRITURA_PAGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FECHAVALORREFERIDOColumn {
                get {
                    return this.columnFECHAVALORREFERIDO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DIAS_ESCRITURA_AVALUOColumn {
                get {
                    return this.columnDIAS_ESCRITURA_AVALUO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FECHAPRESENTACIONColumn {
                get {
                    return this.columnFECHAPRESENTACION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DIAS_PRESENTACION_PAGOColumn {
                get {
                    return this.columnDIAS_PRESENTACION_PAGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IMPUESTOPAGADOColumn {
                get {
                    return this.columnIMPUESTOPAGADO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IMPORTEIMPUESTOColumn {
                get {
                    return this.columnIMPORTEIMPUESTO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DIFERENCIA_PAGADO_CALCULADOColumn {
                get {
                    return this.columnDIFERENCIA_PAGADO_CALCULADO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NOMBRE_NOTARIOColumn {
                get {
                    return this.columnNOMBRE_NOTARIO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NUMERO_NOTARIOColumn {
                get {
                    return this.columnNUMERO_NOTARIO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NOMBRE_PERITOColumn {
                get {
                    return this.columnNOMBRE_PERITO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn REGISTRO_PERITOColumn {
                get {
                    return this.columnREGISTRO_PERITO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NOMBRE_SOCIEDADColumn {
                get {
                    return this.columnNOMBRE_SOCIEDAD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn REGISTRO_SOCIEDADColumn {
                get {
                    return this.columnREGISTRO_SOCIEDAD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NUMEROAVALUOColumn {
                get {
                    return this.columnNUMEROAVALUO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn REGIONColumn {
                get {
                    return this.columnREGION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MANZANAColumn {
                get {
                    return this.columnMANZANA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LOTEColumn {
                get {
                    return this.columnLOTE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UNIDADPRIVATIVAColumn {
                get {
                    return this.columnUNIDADPRIVATIVA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VIANUMOFICIALColumn {
                get {
                    return this.columnVIANUMOFICIAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DIRCONDOMINIOColumn {
                get {
                    return this.columnDIRCONDOMINIO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn COLONIAColumn {
                get {
                    return this.columnCOLONIA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CODIGOPOSTALColumn {
                get {
                    return this.columnCODIGOPOSTAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FECHAColumn {
                get {
                    return this.columnFECHA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PORCACTOTOTALColumn {
                get {
                    return this.columnPORCACTOTOTAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FEXNOT_INFOCONSESPECIFICARow this[int index] {
                get {
                    return ((FEXNOT_INFOCONSESPECIFICARow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FEXNOT_INFOCONSESPECIFICARowChangeEventHandler FEXNOT_INFOCONSESPECIFICARowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FEXNOT_INFOCONSESPECIFICARowChangeEventHandler FEXNOT_INFOCONSESPECIFICARowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FEXNOT_INFOCONSESPECIFICARowChangeEventHandler FEXNOT_INFOCONSESPECIFICARowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FEXNOT_INFOCONSESPECIFICARowChangeEventHandler FEXNOT_INFOCONSESPECIFICARowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddFEXNOT_INFOCONSESPECIFICARow(FEXNOT_INFOCONSESPECIFICARow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FEXNOT_INFOCONSESPECIFICARow AddFEXNOT_INFOCONSESPECIFICARow(
                        decimal IDDECLARACION, 
                        string NUMPRESENTACION, 
                        decimal VALORCATASTRAL, 
                        decimal VALORADQUISICION, 
                        decimal VALORAVALUO, 
                        System.DateTime FECHAESCRITURA, 
                        System.DateTime FECHAPAGO, 
                        decimal DIAS_ESCRITURA_PAGO, 
                        System.DateTime FECHAVALORREFERIDO, 
                        decimal DIAS_ESCRITURA_AVALUO, 
                        System.DateTime FECHAPRESENTACION, 
                        decimal DIAS_PRESENTACION_PAGO, 
                        decimal IMPUESTOPAGADO, 
                        decimal IMPORTEIMPUESTO, 
                        decimal DIFERENCIA_PAGADO_CALCULADO, 
                        string NOMBRE_NOTARIO, 
                        decimal NUMERO_NOTARIO, 
                        string NOMBRE_PERITO, 
                        string REGISTRO_PERITO, 
                        string NOMBRE_SOCIEDAD, 
                        string REGISTRO_SOCIEDAD, 
                        string NUMEROAVALUO, 
                        string REGION, 
                        string MANZANA, 
                        string LOTE, 
                        string UNIDADPRIVATIVA, 
                        string VIANUMOFICIAL, 
                        string DIRCONDOMINIO, 
                        string COLONIA, 
                        string CODIGOPOSTAL, 
                        System.DateTime FECHA, 
                        float PORCACTOTOTAL) {
                FEXNOT_INFOCONSESPECIFICARow rowFEXNOT_INFOCONSESPECIFICARow = ((FEXNOT_INFOCONSESPECIFICARow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        IDDECLARACION,
                        NUMPRESENTACION,
                        VALORCATASTRAL,
                        VALORADQUISICION,
                        VALORAVALUO,
                        FECHAESCRITURA,
                        FECHAPAGO,
                        DIAS_ESCRITURA_PAGO,
                        FECHAVALORREFERIDO,
                        DIAS_ESCRITURA_AVALUO,
                        FECHAPRESENTACION,
                        DIAS_PRESENTACION_PAGO,
                        IMPUESTOPAGADO,
                        IMPORTEIMPUESTO,
                        DIFERENCIA_PAGADO_CALCULADO,
                        NOMBRE_NOTARIO,
                        NUMERO_NOTARIO,
                        NOMBRE_PERITO,
                        REGISTRO_PERITO,
                        NOMBRE_SOCIEDAD,
                        REGISTRO_SOCIEDAD,
                        NUMEROAVALUO,
                        REGION,
                        MANZANA,
                        LOTE,
                        UNIDADPRIVATIVA,
                        VIANUMOFICIAL,
                        DIRCONDOMINIO,
                        COLONIA,
                        CODIGOPOSTAL,
                        FECHA,
                        PORCACTOTOTAL};
                rowFEXNOT_INFOCONSESPECIFICARow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFEXNOT_INFOCONSESPECIFICARow);
                return rowFEXNOT_INFOCONSESPECIFICARow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                FEXNOT_INFOCONSESPECIFICADataTable cln = ((FEXNOT_INFOCONSESPECIFICADataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FEXNOT_INFOCONSESPECIFICADataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnIDDECLARACION = base.Columns["IDDECLARACION"];
                this.columnNUMPRESENTACION = base.Columns["NUMPRESENTACION"];
                this.columnVALORCATASTRAL = base.Columns["VALORCATASTRAL"];
                this.columnVALORADQUISICION = base.Columns["VALORADQUISICION"];
                this.columnVALORAVALUO = base.Columns["VALORAVALUO"];
                this.columnFECHAESCRITURA = base.Columns["FECHAESCRITURA"];
                this.columnFECHAPAGO = base.Columns["FECHAPAGO"];
                this.columnDIAS_ESCRITURA_PAGO = base.Columns["DIAS_ESCRITURA_PAGO"];
                this.columnFECHAVALORREFERIDO = base.Columns["FECHAVALORREFERIDO"];
                this.columnDIAS_ESCRITURA_AVALUO = base.Columns["DIAS_ESCRITURA_AVALUO"];
                this.columnFECHAPRESENTACION = base.Columns["FECHAPRESENTACION"];
                this.columnDIAS_PRESENTACION_PAGO = base.Columns["DIAS_PRESENTACION_PAGO"];
                this.columnIMPUESTOPAGADO = base.Columns["IMPUESTOPAGADO"];
                this.columnIMPORTEIMPUESTO = base.Columns["IMPORTEIMPUESTO"];
                this.columnDIFERENCIA_PAGADO_CALCULADO = base.Columns["DIFERENCIA_PAGADO_CALCULADO"];
                this.columnNOMBRE_NOTARIO = base.Columns["NOMBRE_NOTARIO"];
                this.columnNUMERO_NOTARIO = base.Columns["NUMERO_NOTARIO"];
                this.columnNOMBRE_PERITO = base.Columns["NOMBRE_PERITO"];
                this.columnREGISTRO_PERITO = base.Columns["REGISTRO_PERITO"];
                this.columnNOMBRE_SOCIEDAD = base.Columns["NOMBRE_SOCIEDAD"];
                this.columnREGISTRO_SOCIEDAD = base.Columns["REGISTRO_SOCIEDAD"];
                this.columnNUMEROAVALUO = base.Columns["NUMEROAVALUO"];
                this.columnREGION = base.Columns["REGION"];
                this.columnMANZANA = base.Columns["MANZANA"];
                this.columnLOTE = base.Columns["LOTE"];
                this.columnUNIDADPRIVATIVA = base.Columns["UNIDADPRIVATIVA"];
                this.columnVIANUMOFICIAL = base.Columns["VIANUMOFICIAL"];
                this.columnDIRCONDOMINIO = base.Columns["DIRCONDOMINIO"];
                this.columnCOLONIA = base.Columns["COLONIA"];
                this.columnCODIGOPOSTAL = base.Columns["CODIGOPOSTAL"];
                this.columnFECHA = base.Columns["FECHA"];
                this.columnPORCACTOTOTAL = base.Columns["PORCACTOTOTAL"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnIDDECLARACION = new global::System.Data.DataColumn("IDDECLARACION", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIDDECLARACION);
                this.columnNUMPRESENTACION = new global::System.Data.DataColumn("NUMPRESENTACION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNUMPRESENTACION);
                this.columnVALORCATASTRAL = new global::System.Data.DataColumn("VALORCATASTRAL", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVALORCATASTRAL);
                this.columnVALORADQUISICION = new global::System.Data.DataColumn("VALORADQUISICION", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVALORADQUISICION);
                this.columnVALORAVALUO = new global::System.Data.DataColumn("VALORAVALUO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVALORAVALUO);
                this.columnFECHAESCRITURA = new global::System.Data.DataColumn("FECHAESCRITURA", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFECHAESCRITURA);
                this.columnFECHAPAGO = new global::System.Data.DataColumn("FECHAPAGO", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFECHAPAGO);
                this.columnDIAS_ESCRITURA_PAGO = new global::System.Data.DataColumn("DIAS_ESCRITURA_PAGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDIAS_ESCRITURA_PAGO);
                this.columnFECHAVALORREFERIDO = new global::System.Data.DataColumn("FECHAVALORREFERIDO", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFECHAVALORREFERIDO);
                this.columnDIAS_ESCRITURA_AVALUO = new global::System.Data.DataColumn("DIAS_ESCRITURA_AVALUO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDIAS_ESCRITURA_AVALUO);
                this.columnFECHAPRESENTACION = new global::System.Data.DataColumn("FECHAPRESENTACION", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFECHAPRESENTACION);
                this.columnDIAS_PRESENTACION_PAGO = new global::System.Data.DataColumn("DIAS_PRESENTACION_PAGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDIAS_PRESENTACION_PAGO);
                this.columnIMPUESTOPAGADO = new global::System.Data.DataColumn("IMPUESTOPAGADO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIMPUESTOPAGADO);
                this.columnIMPORTEIMPUESTO = new global::System.Data.DataColumn("IMPORTEIMPUESTO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIMPORTEIMPUESTO);
                this.columnDIFERENCIA_PAGADO_CALCULADO = new global::System.Data.DataColumn("DIFERENCIA_PAGADO_CALCULADO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDIFERENCIA_PAGADO_CALCULADO);
                this.columnNOMBRE_NOTARIO = new global::System.Data.DataColumn("NOMBRE_NOTARIO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOMBRE_NOTARIO);
                this.columnNUMERO_NOTARIO = new global::System.Data.DataColumn("NUMERO_NOTARIO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNUMERO_NOTARIO);
                this.columnNOMBRE_PERITO = new global::System.Data.DataColumn("NOMBRE_PERITO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOMBRE_PERITO);
                this.columnREGISTRO_PERITO = new global::System.Data.DataColumn("REGISTRO_PERITO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREGISTRO_PERITO);
                this.columnNOMBRE_SOCIEDAD = new global::System.Data.DataColumn("NOMBRE_SOCIEDAD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOMBRE_SOCIEDAD);
                this.columnREGISTRO_SOCIEDAD = new global::System.Data.DataColumn("REGISTRO_SOCIEDAD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREGISTRO_SOCIEDAD);
                this.columnNUMEROAVALUO = new global::System.Data.DataColumn("NUMEROAVALUO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNUMEROAVALUO);
                this.columnREGION = new global::System.Data.DataColumn("REGION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREGION);
                this.columnMANZANA = new global::System.Data.DataColumn("MANZANA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMANZANA);
                this.columnLOTE = new global::System.Data.DataColumn("LOTE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOTE);
                this.columnUNIDADPRIVATIVA = new global::System.Data.DataColumn("UNIDADPRIVATIVA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUNIDADPRIVATIVA);
                this.columnVIANUMOFICIAL = new global::System.Data.DataColumn("VIANUMOFICIAL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVIANUMOFICIAL);
                this.columnDIRCONDOMINIO = new global::System.Data.DataColumn("DIRCONDOMINIO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDIRCONDOMINIO);
                this.columnCOLONIA = new global::System.Data.DataColumn("COLONIA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOLONIA);
                this.columnCODIGOPOSTAL = new global::System.Data.DataColumn("CODIGOPOSTAL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCODIGOPOSTAL);
                this.columnFECHA = new global::System.Data.DataColumn("FECHA", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFECHA);
                this.columnPORCACTOTOTAL = new global::System.Data.DataColumn("PORCACTOTOTAL", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPORCACTOTOTAL);
                this.columnIDDECLARACION.AllowDBNull = false;
                this.columnFECHAESCRITURA.DateTimeMode = global::System.Data.DataSetDateTime.Unspecified;
                this.columnFECHAPAGO.DateTimeMode = global::System.Data.DataSetDateTime.Unspecified;
                this.columnFECHAVALORREFERIDO.DateTimeMode = global::System.Data.DataSetDateTime.Unspecified;
                this.columnFECHAPRESENTACION.DateTimeMode = global::System.Data.DataSetDateTime.Unspecified;
                this.columnNOMBRE_NOTARIO.MaxLength = 603;
                this.columnNOMBRE_PERITO.MaxLength = 203;
                this.columnREGISTRO_PERITO.AllowDBNull = false;
                this.columnREGISTRO_PERITO.MaxLength = 20;
                this.columnNOMBRE_SOCIEDAD.MaxLength = 100;
                this.columnREGISTRO_SOCIEDAD.MaxLength = 20;
                this.columnNUMEROAVALUO.AllowDBNull = false;
                this.columnNUMEROAVALUO.MaxLength = 30;
                this.columnREGION.AllowDBNull = false;
                this.columnREGION.MaxLength = 3;
                this.columnMANZANA.AllowDBNull = false;
                this.columnMANZANA.MaxLength = 3;
                this.columnLOTE.AllowDBNull = false;
                this.columnLOTE.MaxLength = 2;
                this.columnUNIDADPRIVATIVA.AllowDBNull = false;
                this.columnUNIDADPRIVATIVA.MaxLength = 3;
                this.columnVIANUMOFICIAL.MaxLength = 118;
                this.columnDIRCONDOMINIO.MaxLength = 106;
                this.columnCOLONIA.MaxLength = 50;
                this.columnCODIGOPOSTAL.MaxLength = 5;
                this.columnFECHA.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FEXNOT_INFOCONSESPECIFICARow NewFEXNOT_INFOCONSESPECIFICARow() {
                return ((FEXNOT_INFOCONSESPECIFICARow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FEXNOT_INFOCONSESPECIFICARow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(FEXNOT_INFOCONSESPECIFICARow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FEXNOT_INFOCONSESPECIFICARowChanged != null)) {
                    this.FEXNOT_INFOCONSESPECIFICARowChanged(this, new FEXNOT_INFOCONSESPECIFICARowChangeEvent(((FEXNOT_INFOCONSESPECIFICARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FEXNOT_INFOCONSESPECIFICARowChanging != null)) {
                    this.FEXNOT_INFOCONSESPECIFICARowChanging(this, new FEXNOT_INFOCONSESPECIFICARowChangeEvent(((FEXNOT_INFOCONSESPECIFICARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FEXNOT_INFOCONSESPECIFICARowDeleted != null)) {
                    this.FEXNOT_INFOCONSESPECIFICARowDeleted(this, new FEXNOT_INFOCONSESPECIFICARowChangeEvent(((FEXNOT_INFOCONSESPECIFICARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FEXNOT_INFOCONSESPECIFICARowDeleting != null)) {
                    this.FEXNOT_INFOCONSESPECIFICARowDeleting(this, new FEXNOT_INFOCONSESPECIFICARowChangeEvent(((FEXNOT_INFOCONSESPECIFICARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveFEXNOT_INFOCONSESPECIFICARow(FEXNOT_INFOCONSESPECIFICARow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DseInfConsultaEspecifica ds = new DseInfConsultaEspecifica();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FEXNOT_INFOCONSESPECIFICADataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class FEXNOT_INFOCONSESPECIFICARow : global::System.Data.DataRow {
            
            private FEXNOT_INFOCONSESPECIFICADataTable tableFEXNOT_INFOCONSESPECIFICA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal FEXNOT_INFOCONSESPECIFICARow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFEXNOT_INFOCONSESPECIFICA = ((FEXNOT_INFOCONSESPECIFICADataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal IDDECLARACION {
                get {
                    return ((decimal)(this[this.tableFEXNOT_INFOCONSESPECIFICA.IDDECLARACIONColumn]));
                }
                set {
                    this[this.tableFEXNOT_INFOCONSESPECIFICA.IDDECLARACIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NUMPRESENTACION {
                get {
                    try {
                        return ((string)(this[this.tableFEXNOT_INFOCONSESPECIFICA.NUMPRESENTACIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'NUMPRESENTACION\' de la tabla \'FEXNOT_INFOCONSESPECIFICA\' " +
                                "es DBNull.", e);
                    }
                }
                set {
                    this[this.tableFEXNOT_INFOCONSESPECIFICA.NUMPRESENTACIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal VALORCATASTRAL {
                get {
                    try {
                        return ((decimal)(this[this.tableFEXNOT_INFOCONSESPECIFICA.VALORCATASTRALColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'VALORCATASTRAL\' de la tabla \'FEXNOT_INFOCONSESPECIFICA\' e" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableFEXNOT_INFOCONSESPECIFICA.VALORCATASTRALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal VALORADQUISICION {
                get {
                    try {
                        return ((decimal)(this[this.tableFEXNOT_INFOCONSESPECIFICA.VALORADQUISICIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'VALORADQUISICION\' de la tabla \'FEXNOT_INFOCONSESPECIFICA\'" +
                                " es DBNull.", e);
                    }
                }
                set {
                    this[this.tableFEXNOT_INFOCONSESPECIFICA.VALORADQUISICIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal VALORAVALUO {
                get {
                    try {
                        return ((decimal)(this[this.tableFEXNOT_INFOCONSESPECIFICA.VALORAVALUOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'VALORAVALUO\' de la tabla \'FEXNOT_INFOCONSESPECIFICA\' es D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableFEXNOT_INFOCONSESPECIFICA.VALORAVALUOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime FECHAESCRITURA {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFEXNOT_INFOCONSESPECIFICA.FECHAESCRITURAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'FECHAESCRITURA\' de la tabla \'FEXNOT_INFOCONSESPECIFICA\' e" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableFEXNOT_INFOCONSESPECIFICA.FECHAESCRITURAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime FECHAPAGO {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFEXNOT_INFOCONSESPECIFICA.FECHAPAGOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'FECHAPAGO\' de la tabla \'FEXNOT_INFOCONSESPECIFICA\' es DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableFEXNOT_INFOCONSESPECIFICA.FECHAPAGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal DIAS_ESCRITURA_PAGO {
                get {
                    try {
                        return ((decimal)(this[this.tableFEXNOT_INFOCONSESPECIFICA.DIAS_ESCRITURA_PAGOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'DIAS_ESCRITURA_PAGO\' de la tabla \'FEXNOT_INFOCONSESPECIFI" +
                                "CA\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableFEXNOT_INFOCONSESPECIFICA.DIAS_ESCRITURA_PAGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime FECHAVALORREFERIDO {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFEXNOT_INFOCONSESPECIFICA.FECHAVALORREFERIDOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'FECHAVALORREFERIDO\' de la tabla \'FEXNOT_INFOCONSESPECIFIC" +
                                "A\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableFEXNOT_INFOCONSESPECIFICA.FECHAVALORREFERIDOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal DIAS_ESCRITURA_AVALUO {
                get {
                    try {
                        return ((decimal)(this[this.tableFEXNOT_INFOCONSESPECIFICA.DIAS_ESCRITURA_AVALUOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'DIAS_ESCRITURA_AVALUO\' de la tabla \'FEXNOT_INFOCONSESPECI" +
                                "FICA\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableFEXNOT_INFOCONSESPECIFICA.DIAS_ESCRITURA_AVALUOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime FECHAPRESENTACION {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFEXNOT_INFOCONSESPECIFICA.FECHAPRESENTACIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'FECHAPRESENTACION\' de la tabla \'FEXNOT_INFOCONSESPECIFICA" +
                                "\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableFEXNOT_INFOCONSESPECIFICA.FECHAPRESENTACIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal DIAS_PRESENTACION_PAGO {
                get {
                    try {
                        return ((decimal)(this[this.tableFEXNOT_INFOCONSESPECIFICA.DIAS_PRESENTACION_PAGOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'DIAS_PRESENTACION_PAGO\' de la tabla \'FEXNOT_INFOCONSESPEC" +
                                "IFICA\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableFEXNOT_INFOCONSESPECIFICA.DIAS_PRESENTACION_PAGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal IMPUESTOPAGADO {
                get {
                    try {
                        return ((decimal)(this[this.tableFEXNOT_INFOCONSESPECIFICA.IMPUESTOPAGADOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'IMPUESTOPAGADO\' de la tabla \'FEXNOT_INFOCONSESPECIFICA\' e" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableFEXNOT_INFOCONSESPECIFICA.IMPUESTOPAGADOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal IMPORTEIMPUESTO {
                get {
                    try {
                        return ((decimal)(this[this.tableFEXNOT_INFOCONSESPECIFICA.IMPORTEIMPUESTOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'IMPORTEIMPUESTO\' de la tabla \'FEXNOT_INFOCONSESPECIFICA\' " +
                                "es DBNull.", e);
                    }
                }
                set {
                    this[this.tableFEXNOT_INFOCONSESPECIFICA.IMPORTEIMPUESTOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal DIFERENCIA_PAGADO_CALCULADO {
                get {
                    try {
                        return ((decimal)(this[this.tableFEXNOT_INFOCONSESPECIFICA.DIFERENCIA_PAGADO_CALCULADOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'DIFERENCIA_PAGADO_CALCULADO\' de la tabla \'FEXNOT_INFOCONS" +
                                "ESPECIFICA\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableFEXNOT_INFOCONSESPECIFICA.DIFERENCIA_PAGADO_CALCULADOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NOMBRE_NOTARIO {
                get {
                    try {
                        return ((string)(this[this.tableFEXNOT_INFOCONSESPECIFICA.NOMBRE_NOTARIOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'NOMBRE_NOTARIO\' de la tabla \'FEXNOT_INFOCONSESPECIFICA\' e" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableFEXNOT_INFOCONSESPECIFICA.NOMBRE_NOTARIOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal NUMERO_NOTARIO {
                get {
                    try {
                        return ((decimal)(this[this.tableFEXNOT_INFOCONSESPECIFICA.NUMERO_NOTARIOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'NUMERO_NOTARIO\' de la tabla \'FEXNOT_INFOCONSESPECIFICA\' e" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableFEXNOT_INFOCONSESPECIFICA.NUMERO_NOTARIOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NOMBRE_PERITO {
                get {
                    try {
                        return ((string)(this[this.tableFEXNOT_INFOCONSESPECIFICA.NOMBRE_PERITOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'NOMBRE_PERITO\' de la tabla \'FEXNOT_INFOCONSESPECIFICA\' es" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableFEXNOT_INFOCONSESPECIFICA.NOMBRE_PERITOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string REGISTRO_PERITO {
                get {
                    return ((string)(this[this.tableFEXNOT_INFOCONSESPECIFICA.REGISTRO_PERITOColumn]));
                }
                set {
                    this[this.tableFEXNOT_INFOCONSESPECIFICA.REGISTRO_PERITOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NOMBRE_SOCIEDAD {
                get {
                    try {
                        return ((string)(this[this.tableFEXNOT_INFOCONSESPECIFICA.NOMBRE_SOCIEDADColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'NOMBRE_SOCIEDAD\' de la tabla \'FEXNOT_INFOCONSESPECIFICA\' " +
                                "es DBNull.", e);
                    }
                }
                set {
                    this[this.tableFEXNOT_INFOCONSESPECIFICA.NOMBRE_SOCIEDADColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string REGISTRO_SOCIEDAD {
                get {
                    try {
                        return ((string)(this[this.tableFEXNOT_INFOCONSESPECIFICA.REGISTRO_SOCIEDADColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'REGISTRO_SOCIEDAD\' de la tabla \'FEXNOT_INFOCONSESPECIFICA" +
                                "\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableFEXNOT_INFOCONSESPECIFICA.REGISTRO_SOCIEDADColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NUMEROAVALUO {
                get {
                    return ((string)(this[this.tableFEXNOT_INFOCONSESPECIFICA.NUMEROAVALUOColumn]));
                }
                set {
                    this[this.tableFEXNOT_INFOCONSESPECIFICA.NUMEROAVALUOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string REGION {
                get {
                    return ((string)(this[this.tableFEXNOT_INFOCONSESPECIFICA.REGIONColumn]));
                }
                set {
                    this[this.tableFEXNOT_INFOCONSESPECIFICA.REGIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MANZANA {
                get {
                    return ((string)(this[this.tableFEXNOT_INFOCONSESPECIFICA.MANZANAColumn]));
                }
                set {
                    this[this.tableFEXNOT_INFOCONSESPECIFICA.MANZANAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LOTE {
                get {
                    return ((string)(this[this.tableFEXNOT_INFOCONSESPECIFICA.LOTEColumn]));
                }
                set {
                    this[this.tableFEXNOT_INFOCONSESPECIFICA.LOTEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UNIDADPRIVATIVA {
                get {
                    return ((string)(this[this.tableFEXNOT_INFOCONSESPECIFICA.UNIDADPRIVATIVAColumn]));
                }
                set {
                    this[this.tableFEXNOT_INFOCONSESPECIFICA.UNIDADPRIVATIVAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string VIANUMOFICIAL {
                get {
                    try {
                        return ((string)(this[this.tableFEXNOT_INFOCONSESPECIFICA.VIANUMOFICIALColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'VIANUMOFICIAL\' de la tabla \'FEXNOT_INFOCONSESPECIFICA\' es" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableFEXNOT_INFOCONSESPECIFICA.VIANUMOFICIALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DIRCONDOMINIO {
                get {
                    try {
                        return ((string)(this[this.tableFEXNOT_INFOCONSESPECIFICA.DIRCONDOMINIOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'DIRCONDOMINIO\' de la tabla \'FEXNOT_INFOCONSESPECIFICA\' es" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableFEXNOT_INFOCONSESPECIFICA.DIRCONDOMINIOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string COLONIA {
                get {
                    try {
                        return ((string)(this[this.tableFEXNOT_INFOCONSESPECIFICA.COLONIAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'COLONIA\' de la tabla \'FEXNOT_INFOCONSESPECIFICA\' es DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableFEXNOT_INFOCONSESPECIFICA.COLONIAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CODIGOPOSTAL {
                get {
                    try {
                        return ((string)(this[this.tableFEXNOT_INFOCONSESPECIFICA.CODIGOPOSTALColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'CODIGOPOSTAL\' de la tabla \'FEXNOT_INFOCONSESPECIFICA\' es " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableFEXNOT_INFOCONSESPECIFICA.CODIGOPOSTALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime FECHA {
                get {
                    return ((global::System.DateTime)(this[this.tableFEXNOT_INFOCONSESPECIFICA.FECHAColumn]));
                }
                set {
                    this[this.tableFEXNOT_INFOCONSESPECIFICA.FECHAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float PORCACTOTOTAL {
                get {
                    try {
                        return ((float)(this[this.tableFEXNOT_INFOCONSESPECIFICA.PORCACTOTOTALColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'PORCACTOTOTAL\' de la tabla \'FEXNOT_INFOCONSESPECIFICA\' es" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableFEXNOT_INFOCONSESPECIFICA.PORCACTOTOTALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNUMPRESENTACIONNull() {
                return this.IsNull(this.tableFEXNOT_INFOCONSESPECIFICA.NUMPRESENTACIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNUMPRESENTACIONNull() {
                this[this.tableFEXNOT_INFOCONSESPECIFICA.NUMPRESENTACIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVALORCATASTRALNull() {
                return this.IsNull(this.tableFEXNOT_INFOCONSESPECIFICA.VALORCATASTRALColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVALORCATASTRALNull() {
                this[this.tableFEXNOT_INFOCONSESPECIFICA.VALORCATASTRALColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVALORADQUISICIONNull() {
                return this.IsNull(this.tableFEXNOT_INFOCONSESPECIFICA.VALORADQUISICIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVALORADQUISICIONNull() {
                this[this.tableFEXNOT_INFOCONSESPECIFICA.VALORADQUISICIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVALORAVALUONull() {
                return this.IsNull(this.tableFEXNOT_INFOCONSESPECIFICA.VALORAVALUOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVALORAVALUONull() {
                this[this.tableFEXNOT_INFOCONSESPECIFICA.VALORAVALUOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFECHAESCRITURANull() {
                return this.IsNull(this.tableFEXNOT_INFOCONSESPECIFICA.FECHAESCRITURAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFECHAESCRITURANull() {
                this[this.tableFEXNOT_INFOCONSESPECIFICA.FECHAESCRITURAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFECHAPAGONull() {
                return this.IsNull(this.tableFEXNOT_INFOCONSESPECIFICA.FECHAPAGOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFECHAPAGONull() {
                this[this.tableFEXNOT_INFOCONSESPECIFICA.FECHAPAGOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDIAS_ESCRITURA_PAGONull() {
                return this.IsNull(this.tableFEXNOT_INFOCONSESPECIFICA.DIAS_ESCRITURA_PAGOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDIAS_ESCRITURA_PAGONull() {
                this[this.tableFEXNOT_INFOCONSESPECIFICA.DIAS_ESCRITURA_PAGOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFECHAVALORREFERIDONull() {
                return this.IsNull(this.tableFEXNOT_INFOCONSESPECIFICA.FECHAVALORREFERIDOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFECHAVALORREFERIDONull() {
                this[this.tableFEXNOT_INFOCONSESPECIFICA.FECHAVALORREFERIDOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDIAS_ESCRITURA_AVALUONull() {
                return this.IsNull(this.tableFEXNOT_INFOCONSESPECIFICA.DIAS_ESCRITURA_AVALUOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDIAS_ESCRITURA_AVALUONull() {
                this[this.tableFEXNOT_INFOCONSESPECIFICA.DIAS_ESCRITURA_AVALUOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFECHAPRESENTACIONNull() {
                return this.IsNull(this.tableFEXNOT_INFOCONSESPECIFICA.FECHAPRESENTACIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFECHAPRESENTACIONNull() {
                this[this.tableFEXNOT_INFOCONSESPECIFICA.FECHAPRESENTACIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDIAS_PRESENTACION_PAGONull() {
                return this.IsNull(this.tableFEXNOT_INFOCONSESPECIFICA.DIAS_PRESENTACION_PAGOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDIAS_PRESENTACION_PAGONull() {
                this[this.tableFEXNOT_INFOCONSESPECIFICA.DIAS_PRESENTACION_PAGOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIMPUESTOPAGADONull() {
                return this.IsNull(this.tableFEXNOT_INFOCONSESPECIFICA.IMPUESTOPAGADOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIMPUESTOPAGADONull() {
                this[this.tableFEXNOT_INFOCONSESPECIFICA.IMPUESTOPAGADOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIMPORTEIMPUESTONull() {
                return this.IsNull(this.tableFEXNOT_INFOCONSESPECIFICA.IMPORTEIMPUESTOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIMPORTEIMPUESTONull() {
                this[this.tableFEXNOT_INFOCONSESPECIFICA.IMPORTEIMPUESTOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDIFERENCIA_PAGADO_CALCULADONull() {
                return this.IsNull(this.tableFEXNOT_INFOCONSESPECIFICA.DIFERENCIA_PAGADO_CALCULADOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDIFERENCIA_PAGADO_CALCULADONull() {
                this[this.tableFEXNOT_INFOCONSESPECIFICA.DIFERENCIA_PAGADO_CALCULADOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNOMBRE_NOTARIONull() {
                return this.IsNull(this.tableFEXNOT_INFOCONSESPECIFICA.NOMBRE_NOTARIOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNOMBRE_NOTARIONull() {
                this[this.tableFEXNOT_INFOCONSESPECIFICA.NOMBRE_NOTARIOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNUMERO_NOTARIONull() {
                return this.IsNull(this.tableFEXNOT_INFOCONSESPECIFICA.NUMERO_NOTARIOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNUMERO_NOTARIONull() {
                this[this.tableFEXNOT_INFOCONSESPECIFICA.NUMERO_NOTARIOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNOMBRE_PERITONull() {
                return this.IsNull(this.tableFEXNOT_INFOCONSESPECIFICA.NOMBRE_PERITOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNOMBRE_PERITONull() {
                this[this.tableFEXNOT_INFOCONSESPECIFICA.NOMBRE_PERITOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNOMBRE_SOCIEDADNull() {
                return this.IsNull(this.tableFEXNOT_INFOCONSESPECIFICA.NOMBRE_SOCIEDADColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNOMBRE_SOCIEDADNull() {
                this[this.tableFEXNOT_INFOCONSESPECIFICA.NOMBRE_SOCIEDADColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsREGISTRO_SOCIEDADNull() {
                return this.IsNull(this.tableFEXNOT_INFOCONSESPECIFICA.REGISTRO_SOCIEDADColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetREGISTRO_SOCIEDADNull() {
                this[this.tableFEXNOT_INFOCONSESPECIFICA.REGISTRO_SOCIEDADColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVIANUMOFICIALNull() {
                return this.IsNull(this.tableFEXNOT_INFOCONSESPECIFICA.VIANUMOFICIALColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVIANUMOFICIALNull() {
                this[this.tableFEXNOT_INFOCONSESPECIFICA.VIANUMOFICIALColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDIRCONDOMINIONull() {
                return this.IsNull(this.tableFEXNOT_INFOCONSESPECIFICA.DIRCONDOMINIOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDIRCONDOMINIONull() {
                this[this.tableFEXNOT_INFOCONSESPECIFICA.DIRCONDOMINIOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCOLONIANull() {
                return this.IsNull(this.tableFEXNOT_INFOCONSESPECIFICA.COLONIAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCOLONIANull() {
                this[this.tableFEXNOT_INFOCONSESPECIFICA.COLONIAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCODIGOPOSTALNull() {
                return this.IsNull(this.tableFEXNOT_INFOCONSESPECIFICA.CODIGOPOSTALColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCODIGOPOSTALNull() {
                this[this.tableFEXNOT_INFOCONSESPECIFICA.CODIGOPOSTALColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPORCACTOTOTALNull() {
                return this.IsNull(this.tableFEXNOT_INFOCONSESPECIFICA.PORCACTOTOTALColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPORCACTOTOTALNull() {
                this[this.tableFEXNOT_INFOCONSESPECIFICA.PORCACTOTOTALColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class FEXNOT_INFOCONSESPECIFICARowChangeEvent : global::System.EventArgs {
            
            private FEXNOT_INFOCONSESPECIFICARow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FEXNOT_INFOCONSESPECIFICARowChangeEvent(FEXNOT_INFOCONSESPECIFICARow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FEXNOT_INFOCONSESPECIFICARow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace SIGAPred.FuentesExternas.Isai.Services.AccesoDatos.DseInfConsultaEspecificaTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class FEXNOT_INFOCONSESPECIFICATableAdapter : global::System.ComponentModel.Component {
        
        private global::Oracle.DataAccess.Client.OracleDataAdapter _adapter;
        
        private global::Oracle.DataAccess.Client.OracleConnection _connection;
        
        private global::Oracle.DataAccess.Client.OracleTransaction _transaction;
        
        private global::Oracle.DataAccess.Client.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public FEXNOT_INFOCONSESPECIFICATableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::Oracle.DataAccess.Client.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::Oracle.DataAccess.Client.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Oracle.DataAccess.Client.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::Oracle.DataAccess.Client.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::Oracle.DataAccess.Client.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Oracle.DataAccess.Client.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "FEXNOT_INFOCONSESPECIFICA";
            tableMapping.ColumnMappings.Add("IDDECLARACION", "IDDECLARACION");
            tableMapping.ColumnMappings.Add("NUMPRESENTACION", "NUMPRESENTACION");
            tableMapping.ColumnMappings.Add("VALORCATASTRAL", "VALORCATASTRAL");
            tableMapping.ColumnMappings.Add("VALORADQUISICION", "VALORADQUISICION");
            tableMapping.ColumnMappings.Add("VALORAVALUO", "VALORAVALUO");
            tableMapping.ColumnMappings.Add("FECHAESCRITURA", "FECHAESCRITURA");
            tableMapping.ColumnMappings.Add("FECHAPAGO", "FECHAPAGO");
            tableMapping.ColumnMappings.Add("DIAS_ESCRITURA_PAGO", "DIAS_ESCRITURA_PAGO");
            tableMapping.ColumnMappings.Add("FECHAVALORREFERIDO", "FECHAVALORREFERIDO");
            tableMapping.ColumnMappings.Add("DIAS_ESCRITURA_AVALUO", "DIAS_ESCRITURA_AVALUO");
            tableMapping.ColumnMappings.Add("FECHAPRESENTACION", "FECHAPRESENTACION");
            tableMapping.ColumnMappings.Add("DIAS_PRESENTACION_PAGO", "DIAS_PRESENTACION_PAGO");
            tableMapping.ColumnMappings.Add("IMPUESTOPAGADO", "IMPUESTOPAGADO");
            tableMapping.ColumnMappings.Add("IMPORTEIMPUESTO", "IMPORTEIMPUESTO");
            tableMapping.ColumnMappings.Add("DIFERENCIA_PAGADO_CALCULADO", "DIFERENCIA_PAGADO_CALCULADO");
            tableMapping.ColumnMappings.Add("NOMBRE_NOTARIO", "NOMBRE_NOTARIO");
            tableMapping.ColumnMappings.Add("NUMERO_NOTARIO", "NUMERO_NOTARIO");
            tableMapping.ColumnMappings.Add("NOMBRE_PERITO", "NOMBRE_PERITO");
            tableMapping.ColumnMappings.Add("REGISTRO_PERITO", "REGISTRO_PERITO");
            tableMapping.ColumnMappings.Add("NOMBRE_SOCIEDAD", "NOMBRE_SOCIEDAD");
            tableMapping.ColumnMappings.Add("REGISTRO_SOCIEDAD", "REGISTRO_SOCIEDAD");
            tableMapping.ColumnMappings.Add("NUMEROAVALUO", "NUMEROAVALUO");
            tableMapping.ColumnMappings.Add("REGION", "REGION");
            tableMapping.ColumnMappings.Add("MANZANA", "MANZANA");
            tableMapping.ColumnMappings.Add("LOTE", "LOTE");
            tableMapping.ColumnMappings.Add("UNIDADPRIVATIVA", "UNIDADPRIVATIVA");
            tableMapping.ColumnMappings.Add("VIANUMOFICIAL", "VIANUMOFICIAL");
            tableMapping.ColumnMappings.Add("DIRCONDOMINIO", "DIRCONDOMINIO");
            tableMapping.ColumnMappings.Add("COLONIA", "COLONIA");
            tableMapping.ColumnMappings.Add("CODIGOPOSTAL", "CODIGOPOSTAL");
            tableMapping.ColumnMappings.Add("FECHA", "FECHA");
            tableMapping.ColumnMappings.Add("PORCACTOTOTAL", "PORCACTOTOTAL");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Oracle.DataAccess.Client.OracleConnection();
            this._connection.ConnectionString = global::SIGAPred.FuentesExternas.Isai.Services.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Oracle.DataAccess.Client.OracleCommand[4];
            this._commandCollection[0] = new global::Oracle.DataAccess.Client.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "FEXNOT.FEXNOT_INFORMES_PKG.FEXNOT_INF_CONS_ESPECIFICAC_P";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            global::Oracle.DataAccess.Client.OracleParameter param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "PAR_REGION";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Char;
            param.Size = 32768;
            param.IsNullable = true;
            param.SourceColumn = null;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "PAR_MANZANA";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Char;
            param.Size = 32768;
            param.IsNullable = true;
            param.SourceColumn = null;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "PAR_LOTE";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Char;
            param.Size = 32768;
            param.IsNullable = true;
            param.SourceColumn = null;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "PAR_UNIDADPRIVATIVA";
            param.DbType = global::System.Data.DbType.StringFixedLength;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Char;
            param.Size = 32768;
            param.IsNullable = true;
            param.SourceColumn = null;
            this._commandCollection[0].Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "C_INF_VALORES";
            param.DbType = global::System.Data.DbType.Object;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.RefCursor;
            param.Direction = global::System.Data.ParameterDirection.Output;
            param.IsNullable = true;
            param.SourceColumn = null;
            this._commandCollection[0].Parameters.Add(param);
            this._commandCollection[1] = new global::Oracle.DataAccess.Client.OracleCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "FEXNOT.FEXNOT_INFORMES_PKG.FEXNOT_INF_CONS_ESPECIBYID_P";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.StoredProcedure;
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "PAR_IDDECLARACION";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Decimal;
            param.IsNullable = true;
            param.SourceColumn = null;
            this._commandCollection[1].Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "C_INF_CONSESP";
            param.DbType = global::System.Data.DbType.Object;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.RefCursor;
            param.Direction = global::System.Data.ParameterDirection.Output;
            param.IsNullable = true;
            param.SourceColumn = null;
            this._commandCollection[1].Parameters.Add(param);
            this._commandCollection[2] = new global::Oracle.DataAccess.Client.OracleCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "FEXNOT.FEXNOT_INFORMES_PKG.FEXNOT_INF_CONS_ESPECIFICAP_P";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.StoredProcedure;
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "PAR_SUJETO";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.Size = 32768;
            param.IsNullable = true;
            param.SourceColumn = null;
            this._commandCollection[2].Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "C_INF_VALORES";
            param.DbType = global::System.Data.DbType.Object;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.RefCursor;
            param.Direction = global::System.Data.ParameterDirection.Output;
            param.IsNullable = true;
            param.SourceColumn = null;
            this._commandCollection[2].Parameters.Add(param);
            this._commandCollection[3] = new global::Oracle.DataAccess.Client.OracleCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "FEXNOT.FEXNOT_INFORMES_PKG.FEXNOT_INF_CONS_ESPECIFICAU_P";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.StoredProcedure;
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "PAR_NUMEXTERIOR";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.Size = 32768;
            param.IsNullable = true;
            param.SourceColumn = null;
            this._commandCollection[3].Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "PAR_NUMINTERIOR";
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.Varchar2;
            param.Size = 32768;
            param.IsNullable = true;
            param.SourceColumn = null;
            this._commandCollection[3].Parameters.Add(param);
            param = new global::Oracle.DataAccess.Client.OracleParameter();
            param.ParameterName = "C_INF_VALORES";
            param.DbType = global::System.Data.DbType.Object;
            param.OracleDbTypeEx = global::Oracle.DataAccess.Client.OracleDbType.RefCursor;
            param.Direction = global::System.Data.ParameterDirection.Output;
            param.IsNullable = true;
            param.SourceColumn = null;
            this._commandCollection[3].Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DseInfConsultaEspecifica.FEXNOT_INFOCONSESPECIFICADataTable dataTable, string PAR_REGION, string PAR_MANZANA, string PAR_LOTE, string PAR_UNIDADPRIVATIVA, out object C_INF_VALORES) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((PAR_REGION == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(PAR_REGION));
            }
            if ((PAR_MANZANA == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(PAR_MANZANA));
            }
            if ((PAR_LOTE == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(PAR_LOTE));
            }
            if ((PAR_UNIDADPRIVATIVA == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(PAR_UNIDADPRIVATIVA));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            if (((this.Adapter.SelectCommand.Parameters[4].Value == null) 
                        || (this.Adapter.SelectCommand.Parameters[4].Value.GetType() == typeof(global::System.DBNull)))) {
                C_INF_VALORES = global::System.DBNull.Value;
            }
            else {
                C_INF_VALORES = ((object)(this.Adapter.SelectCommand.Parameters[4].Value));
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DseInfConsultaEspecifica.FEXNOT_INFOCONSESPECIFICADataTable GetData(string PAR_REGION, string PAR_MANZANA, string PAR_LOTE, string PAR_UNIDADPRIVATIVA, out object C_INF_VALORES) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((PAR_REGION == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(PAR_REGION));
            }
            if ((PAR_MANZANA == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(PAR_MANZANA));
            }
            if ((PAR_LOTE == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(PAR_LOTE));
            }
            if ((PAR_UNIDADPRIVATIVA == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(PAR_UNIDADPRIVATIVA));
            }
            DseInfConsultaEspecifica.FEXNOT_INFOCONSESPECIFICADataTable dataTable = new DseInfConsultaEspecifica.FEXNOT_INFOCONSESPECIFICADataTable();
            this.Adapter.Fill(dataTable);
            if (((this.Adapter.SelectCommand.Parameters[4].Value == null) 
                        || (this.Adapter.SelectCommand.Parameters[4].Value.GetType() == typeof(global::System.DBNull)))) {
                C_INF_VALORES = global::System.DBNull.Value;
            }
            else {
                C_INF_VALORES = ((object)(this.Adapter.SelectCommand.Parameters[4].Value));
            }
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByIdDeclaracion(DseInfConsultaEspecifica.FEXNOT_INFOCONSESPECIFICADataTable dataTable, global::System.Nullable<decimal> PAR_IDDECLARACION, out object C_INF_CONSESP) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((PAR_IDDECLARACION.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((decimal)(PAR_IDDECLARACION.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            if (((this.Adapter.SelectCommand.Parameters[1].Value == null) 
                        || (this.Adapter.SelectCommand.Parameters[1].Value.GetType() == typeof(global::System.DBNull)))) {
                C_INF_CONSESP = global::System.DBNull.Value;
            }
            else {
                C_INF_CONSESP = ((object)(this.Adapter.SelectCommand.Parameters[1].Value));
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual DseInfConsultaEspecifica.FEXNOT_INFOCONSESPECIFICADataTable GetDataByIdDeclaracion(global::System.Nullable<decimal> PAR_IDDECLARACION, out object C_INF_CONSESP) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((PAR_IDDECLARACION.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((decimal)(PAR_IDDECLARACION.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            DseInfConsultaEspecifica.FEXNOT_INFOCONSESPECIFICADataTable dataTable = new DseInfConsultaEspecifica.FEXNOT_INFOCONSESPECIFICADataTable();
            this.Adapter.Fill(dataTable);
            if (((this.Adapter.SelectCommand.Parameters[1].Value == null) 
                        || (this.Adapter.SelectCommand.Parameters[1].Value.GetType() == typeof(global::System.DBNull)))) {
                C_INF_CONSESP = global::System.DBNull.Value;
            }
            else {
                C_INF_CONSESP = ((object)(this.Adapter.SelectCommand.Parameters[1].Value));
            }
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBySujeto(DseInfConsultaEspecifica.FEXNOT_INFOCONSESPECIFICADataTable dataTable, string PAR_SUJETO, out object C_INF_VALORES) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((PAR_SUJETO == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(PAR_SUJETO));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            if (((this.Adapter.SelectCommand.Parameters[1].Value == null) 
                        || (this.Adapter.SelectCommand.Parameters[1].Value.GetType() == typeof(global::System.DBNull)))) {
                C_INF_VALORES = global::System.DBNull.Value;
            }
            else {
                C_INF_VALORES = ((object)(this.Adapter.SelectCommand.Parameters[1].Value));
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual DseInfConsultaEspecifica.FEXNOT_INFOCONSESPECIFICADataTable GetDataBySujeto(string PAR_SUJETO, out object C_INF_VALORES) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((PAR_SUJETO == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(PAR_SUJETO));
            }
            DseInfConsultaEspecifica.FEXNOT_INFOCONSESPECIFICADataTable dataTable = new DseInfConsultaEspecifica.FEXNOT_INFOCONSESPECIFICADataTable();
            this.Adapter.Fill(dataTable);
            if (((this.Adapter.SelectCommand.Parameters[1].Value == null) 
                        || (this.Adapter.SelectCommand.Parameters[1].Value.GetType() == typeof(global::System.DBNull)))) {
                C_INF_VALORES = global::System.DBNull.Value;
            }
            else {
                C_INF_VALORES = ((object)(this.Adapter.SelectCommand.Parameters[1].Value));
            }
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByUbicacion(DseInfConsultaEspecifica.FEXNOT_INFOCONSESPECIFICADataTable dataTable, string PAR_NUMEXTERIOR, string PAR_NUMINTERIOR, out object C_INF_VALORES) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            if ((PAR_NUMEXTERIOR == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(PAR_NUMEXTERIOR));
            }
            if ((PAR_NUMINTERIOR == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(PAR_NUMINTERIOR));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            if (((this.Adapter.SelectCommand.Parameters[2].Value == null) 
                        || (this.Adapter.SelectCommand.Parameters[2].Value.GetType() == typeof(global::System.DBNull)))) {
                C_INF_VALORES = global::System.DBNull.Value;
            }
            else {
                C_INF_VALORES = ((object)(this.Adapter.SelectCommand.Parameters[2].Value));
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual DseInfConsultaEspecifica.FEXNOT_INFOCONSESPECIFICADataTable GetDataByUbicacion(string PAR_NUMEXTERIOR, string PAR_NUMINTERIOR, out object C_INF_VALORES) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            if ((PAR_NUMEXTERIOR == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(PAR_NUMEXTERIOR));
            }
            if ((PAR_NUMINTERIOR == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(PAR_NUMINTERIOR));
            }
            DseInfConsultaEspecifica.FEXNOT_INFOCONSESPECIFICADataTable dataTable = new DseInfConsultaEspecifica.FEXNOT_INFOCONSESPECIFICADataTable();
            this.Adapter.Fill(dataTable);
            if (((this.Adapter.SelectCommand.Parameters[2].Value == null) 
                        || (this.Adapter.SelectCommand.Parameters[2].Value.GetType() == typeof(global::System.DBNull)))) {
                C_INF_VALORES = global::System.DBNull.Value;
            }
            else {
                C_INF_VALORES = ((object)(this.Adapter.SelectCommand.Parameters[2].Value));
            }
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(DseInfConsultaEspecifica dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(DseInfConsultaEspecifica dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(DseInfConsultaEspecifica dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(DseInfConsultaEspecifica dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager no contiene información de conexión. Establezca cada propieda" +
                        "d TableAdapterManager TableAdapter en una instancia TableAdapter válida.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("La transacción no puede comenzar. La conexión de datos actual no es compatible co" +
                        "n las transacciones o el estado actual no permite que comience la transacción.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591